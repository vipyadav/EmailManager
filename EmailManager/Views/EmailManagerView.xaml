<Window
    x:Class="EmailManager.Views.EmailManagerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AttachedProp="clr-namespace:EmailManager.Common.AttachedProperty;assembly=EmailManager.Common"
    xmlns:Converters="clr-namespace:EmailManager.Common.Converters;assembly=EmailManager.Common"
    xmlns:h="clr-namespace:EmailManager.Common.Helpers;assembly=EmailManager.Common"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:model="clr-namespace:EmailManager.Models"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:vml="clr-namespace:EmailManager.Common"
    Title="Email Manager"
    Width="1297"
    Height="740"
    vml:ViewModelLocator.AutoHookedUpViewModel="True">
    <Window.Resources>
        <ObjectDataProvider
            x:Key="ServerTypesProvider"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:ServerTypes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider
            x:Key="EncryptionsProvider"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:Encryptions" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*" />
            <ColumnDefinition Width="0.5*" />
        </Grid.ColumnDefinitions>
        <Grid
            x:Name="leftGrid"
            Grid.Row="0"
            Grid.Column="0"
            Margin="10,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="10" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.32*" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.32*" />
                    <ColumnDefinition Width="0.06*" />
                </Grid.ColumnDefinitions>

                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    Content="Server type" />
                <ComboBox
                    Grid.Row="0"
                    Grid.Column="1"
                    ItemsSource="{Binding Source={StaticResource ServerTypesProvider}}"
                    SelectedItem="{Binding ServerType}"
                    Text="Select Server type" />
                <Label
                    Grid.Row="0"
                    Grid.Column="3"
                    Content="Encryption" />
                <ComboBox
                    Grid.Row="0"
                    Grid.Column="4"
                    ItemsSource="{Binding Source={StaticResource EncryptionsProvider}}"
                    SelectedItem="{Binding Encryption}"
                    Text="Select Encryption">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}, ConverterParameter={x:Type model:Encryptions}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Content="Server" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Text="{Binding Server, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                <Label
                    Grid.Row="1"
                    Grid.Column="3"
                    Content="Username" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="4"
                    Text="{Binding Username, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                <Label
                    Grid.Row="2"
                    Grid.Column="0"
                    Content="Port" />
                <TextBox
                    Grid.Row="2"
                    Grid.Column="1"
                    AttachedProp:IsNumericAttachedProperty.IsNumericOnly="True"
                    Text="{Binding Port, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static sys:String.Empty}, Mode=TwoWay}"
                    ToolTip="Only numeric value is allowed." />

                <Label
                    Grid.Row="2"
                    Grid.Column="3"
                    Content="Password" />

                <StackPanel Grid.Row="2" Grid.Column="4">
                    <PasswordBox
                        Width="130"
                        h:PasswordHelper.Attach="True"
                        h:PasswordHelper.Password="{Binding Text, ElementName=plain, Mode=TwoWay}" />
                    <TextBlock
                        x:Name="plain"
                        Padding="5"
                        Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <Button
                    Grid.Row="3"
                    Grid.Column="4"
                    HorizontalAlignment="Right"
                    Command="{Binding StartCommand}"
                    Content="Start" />
            </Grid>
            <DataGrid
                Grid.Row="1"
                AutoGenerateColumns="False"
                ItemsSource="{Binding Emails, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding SelectedEmail, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                SelectionMode="Single">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="150"
                        Binding="{Binding Date}"
                        Header="Date" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Subject}"
                        Header="Subject" />
                    <DataGridTextColumn
                        Width="300"
                        Binding="{Binding From}"
                        Header="From" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <TextBox
            Grid.Row="0"
            Grid.Column="1"
            Width="{Binding ElementName=leftGrid, Path=ActualWidth}"
            Height="{Binding ElementName=leftGrid, Path=ActualHeight}"
            MinWidth="632"
            MinHeight="700"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{Binding EmailContent, UpdateSourceTrigger=PropertyChanged}"
            TextWrapping="Wrap" />

    </Grid>

</Window>
